// ========== SYSTEM CODE PERMISSIONS =========================================


// These permissions apply to javac
grant codeBase "file:${java.home}${/}bin${/}-" {
        permission java.security.AllPermission;
};

grant codeBase "file:${java.home}${/}lib${/}-" {
        permission java.security.AllPermission;
};

// These permissions apply to all shared system extensions
grant codeBase "file:${java.home}${/}jre${/}lib${/}ext${/}-" {
        permission java.security.AllPermission;
};

// These permissions apply to javac when ${java.home] points at $JAVA_HOME/jre
grant codeBase "file:${java.home}${/}jre${/}lib${/}-" {
        permission java.security.AllPermission;
};

// These permissions apply to all shared system extensions when
// ${java.home} points at $JAVA_HOME/jre
grant codeBase "file:${java.home}${/}lib${/}ext${/}-" {
        permission java.security.AllPermission;
};

// ========== JEUS CODE PERMISSIONS =======================================


// These permissions apply to the launcher code
grant codeBase "file:${jeus.home}${/}lib${/}-" {
        permission java.security.AllPermission;
};

grant {
		permission javax.management.MBeanServerPermission "*";
        permission javax.management.MBeanPermission "*", "*";
        permission javax.management.MBeanTrustPermission "*";
        permission java.lang.RuntimePermission "*";
};

grant {
        permission java.security.SecurityPermission "runTrustedLogin";
        permission java.security.SecurityPermission "loginCodeSubject";
        permission java.security.SecurityPermission "putProviderProperty.*";
        permission java.security.SecurityPermission "insertProvider.*";
        permission java.security.SecurityPermission "getPolicy";
        permission java.security.SecurityPermission "createAccessControlContext";
        permission javax.security.auth.AuthPermission "modifyPrincipals";
        permission javax.security.auth.AuthPermission "modifyPrivateCredentials";
        permission javax.security.auth.AuthPermission "getSubject";
};

grant {
        permission java.io.FilePermission "${jeus.home}", "read, write, execute";
        permission java.io.FilePermission "${jeus.home}${/}-", "read, write, execute";
        permission java.io.FilePermission "${jeus.home}${/}webhome", "read, write";
        permission java.io.FilePermission "${jeus.home}${/}webhome${/}-", "read, write, delete";
        permission java.io.FilePermission "${jeus.home}${/}sessiondb${/}-", "read, write, delete";

        permission java.io.FilePermission "${java.home}${/}bin${/}-", "read, write, execute";
        permission java.io.FilePermission "${java.home}${/}lib${/}-", "read";
};

grant {
        permission java.net.NetPermission "specifyStreamHandler";
        permission java.net.SocketPermission "*:*", "accept, connect, listen, resolve";
};

// These permissions are granted by default to all web applications
// In addition, a web application will be given a read FilePermission
// and JndiPermission for all files and directories in its document root.
grant { 
    // Required for JNDI lookup of named JDBC DataSource's and
    // javamail named MimePart DataSource used to send mail
    permission java.util.PropertyPermission "java.home", "read";
    permission java.util.PropertyPermission "java.naming.*", "read";
    permission java.util.PropertyPermission "javax.sql.*", "read";

    // OS Specific properties to allow read access
    permission java.util.PropertyPermission "os.name", "read";
    permission java.util.PropertyPermission "os.version", "read";
    permission java.util.PropertyPermission "os.arch", "read";
    permission java.util.PropertyPermission "file.separator", "read";
    permission java.util.PropertyPermission "path.separator", "read";
    permission java.util.PropertyPermission "line.separator", "read";

    // JVM properties to allow read access
    permission java.util.PropertyPermission "java.version", "read";
    permission java.util.PropertyPermission "java.vendor", "read";
    permission java.util.PropertyPermission "java.vendor.url", "read";
    permission java.util.PropertyPermission "java.class.version", "read";
	permission java.util.PropertyPermission "java.specification.version", "read";
	permission java.util.PropertyPermission "java.specification.vendor", "read";
	permission java.util.PropertyPermission "java.specification.name", "read";

	permission java.util.PropertyPermission "java.vm.specification.version", "read";
	permission java.util.PropertyPermission "java.vm.specification.vendor", "read";
	permission java.util.PropertyPermission "java.vm.specification.name", "read";
	permission java.util.PropertyPermission "java.vm.version", "read";
	permission java.util.PropertyPermission "java.vm.vendor", "read";
	permission java.util.PropertyPermission "java.vm.name", "read";
	permission java.util.PropertyPermission "java.library.path", "read";
	permission java.util.PropertyPermission "*", "read,write";

    // Required for OpenJMX
    permission java.lang.RuntimePermission "getAttribute";

	// Allow read of JAXP compliant XML parser debug
	permission java.util.PropertyPermission "jaxp.debug", "read";
	permission java.util.PropertyPermission "javax.xml.bind.JAXBContext", "read";

    // Precompiled JSPs need access to this package.
    permission java.lang.RuntimePermission "accessClassInPackage.org.apache.jasper.runtime";
    permission java.lang.RuntimePermission "accessClassInPackage.org.apache.jasper.runtime.*";
    permission java.lang.RuntimePermission "accessClassInPackage.sun.*";
    
    permission java.util.PropertyPermission "file.encoding", "read"; 
    permission java.util.PropertyPermission "jeus.*", "read";

    permission java.util.logging.LoggingPermission "control";

    permission java.io.SerializablePermission "enableSubclassImplementation";
    permission java.io.SerializablePermission "enableSubstitution";

    permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
    permission javax.security.auth.PrivateCredentialPermission "jeus.security.resource.Password jeus.security.resource.PrincipalImpl \"*\"", "read";

    // for webmanager
    permission java.awt.AWTPermission "*";
    permission ognl.OgnlInvokePermission "*";
};

grant {
    permission javax.management.remote.SubjectDelegationPermission "*";
};